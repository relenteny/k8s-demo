<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
	</parent>
	<groupId>com.solutechconsulting</groupId>
	<artifactId>k8s-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>k8s-demo</name>
	<description>K8S Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>

		<!-- Maven modules -->
		<maven.resources-plugin.version>3.1.0</maven.resources-plugin.version>
		<maven.deploy-plugin.version>2.8.2</maven.deploy-plugin.version>
        <maven.install-plugin.version>2.5.2</maven.install-plugin.version>
        <maven.jar-plugin.version>3.2.0</maven.jar-plugin.version>
		<maven.exec-plugin.version>1.6.0</maven.exec-plugin.version>
		<jib.maven-plugin.version>2.1.0</jib.maven-plugin.version>

		<!-- Application definitions for Kubernetes -->
		<docker.image.parent>adoptopenjdk/openjdk8:jre</docker.image.parent>
		<docker.image.name>docker.io/relenteny/${project.artifactId}</docker.image.name>
		<docker.image.timestamp>${maven.build.timestamp}</docker.image.timestamp>
        <docker.image.tag>${project.version}</docker.image.tag>

        <kubeconfig>${env.HOME}/.kube/config</kubeconfig>
        <helm.namespace>dzone-demo</helm.namespace>
        <helm.chart.name>${project.artifactId}</helm.chart.name>
        <helm.app.version>${project.version}</helm.app.version>
        <helm.image.pull.policy>Always</helm.image.pull.policy>
        <helm.deployment.name>dzone</helm.deployment.name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-helm-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/helm/${helm.chart.name}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/helm</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-support-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/support</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/support</directory>
                                   <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.exec-plugin.version}</version>
                <executions>
                    <execution>
                        <id>chmod</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>chmod</executable>
                            <arguments>
                                <argument>+x</argument>
                                <argument>${project.build.directory}/support/deploy.sh</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven.install-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar-plugin.version}</version>
                <!-- Unfortunately, the skip flag is not supported.
                Workaround: Bind the default-jar execution to a nonexistent phase. -->
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.maven-plugin.version}</version>
                <configuration>
                    <to>
                        <image>${docker.image.name}</image>
                        <tags>
                            <tag>${docker.image.tag}</tag>
                        </tags>
                    </to>
                    <from>
                        <image>registry://${docker.image.parent}</image>
                    </from>
                    <container>
                        <workingDirectory>/app</workingDirectory>
                        <creationTime>${docker.image.timestamp}</creationTime>
                        <entrypoint>INHERIT</entrypoint>
					</container>
                </configuration>
            </plugin>
		</plugins>
	</build>

</project>
